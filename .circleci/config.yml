version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: Decode dotenv file
          command: echo $ENV_FILE | base64 --decode > .env
      - run:
          name: Set Ruby Version
          command: echo "ruby-2.6.2" > ~/.ruby-version
      - run:
          name: docker-compose build 
          command: docker-compose build --no-cache
      - run:
          name: install dependencies
          command: |
            gem update --system
            gem install bundler
            gem install rake --version=12.3.2
            gem install concurrent-ruby --version=1.1.5
            gem install i18n --version=1.6.0
            gem install minitest --version=5.11.3
            gem install thread_safe --version=0.3.6
            gem install tzinfo --version=1.2.5
            gem install activesupport --version=5.2.2
            gem install builder --version=3.2.3
            gem install erubi --version=1.8.0 
            gem install mini_portile2 --version=2.4.0
            gem install nokogiri --version=1.10.3
            gem install rails-dom-testing --version=2.0.3
            gem install crass --version=1.0.4
            gem install loofah --version=2.2.3
            gem install rails-html-sanitizer --version=1.0.4 
            gem install actionview --version=5.2.2
            gem install rack --version=2.0.7
            gem install rack-test --version=1.1.0
            gem install actionpack --version=5.2.2

      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: sleep for waiting launch db
          command: sleep 10
      - run:
          name: "before_test: setup db"
          command: docker-compose run web rails db:create db:migrate
      - run:
          name: test
          command: bundle exec rspec
      - run:
          name: docker-compose down
          command: docker-compose down
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      # see: https://devcenter.heroku.com/articles/container-registry-and-runtime#using-a-ci-cd-platform
      - run:
          name: "build docker image"
          command: docker build --rm=false -t registry.heroku.com/${HEROKU_APP_NAME}/web .
      - run:
          name: setup heroku command
          command: bash .circleci/setup_heroku.sh
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME}
      - run:
          name: "push container to registry.heroku.com"
          command: |
            docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com
            docker push registry.heroku.com/${HEROKU_APP_NAME}/web
            bash .circleci/heroku-container-release.sh
      - run:
          name: heroku db migrate
          command: heroku run rails db:migrate --app ${HEROKU_APP_NAME}
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME}
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master